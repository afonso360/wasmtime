test jump-threading precise-output
target x86_64

function %brif_consteval_default(i32) -> i64 {
block0(v0: i32):
    v1 = iconst.i64 0
    v2 = iconst.i32 999
    brif v2, block1(v1), block2(v1)

block1(v3: i64):
    store.i64 v3, v3
    jump block2(v3)

block2(v4: i64):
    return v4
}

; function %brif_consteval_default(i32) -> i64 fast {
; block0(v0: i32):
;     v1 = iconst.i64 0
;     v3 -> v1
;     v4 -> v3
;     v2 = iconst.i32 999
;     store v3, v3  ; v3 = 0, v3 = 0
;     return v4  ; v4 = 0
; }

function %brif_consteval_arg(i32) -> i64 {
block0(v0: i32):
    v1 = iconst.i64 0
    v2 = iconst.i32 0
    brif v2, block1(v1), block2(v1)

block1(v3: i64):
    store.i64 v3, v3
    jump block2(v3)

block2(v4: i64):
    return v4
}

; function %brif_consteval_arg(i32) -> i64 fast {
; block0(v0: i32):
;     v1 = iconst.i64 0
;     v4 -> v1
;     v2 = iconst.i32 0
;     return v4  ; v4 = 0
; }

