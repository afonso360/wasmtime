test compile precise-output
set unwind_info=false
target riscv64 has_v

function %splat_i8x16(i8) -> i8x16 {
block0(v0: i8):
    v1 = splat.i8x16 v0
    return v1
}

; VCode:
; block0:
;   vmv.v.x v11,a0 #avl=16, #vtype=(e8, m1, ta, ma)
;   vse8.v v11,0(a1) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0xd7, 0x45
;   c.li t3, -0x1f
;   .byte 0xa7, 0x85
;   c.addi tp, 1
;   ret

function %splat_i16x8(i16) -> i16x8 {
block0(v0: i16):
    v1 = splat.i16x8 v0
    return v1
}

; VCode:
; block0:
;   vmv.v.x v11,a0 #avl=8, #vtype=(e16, m1, ta, ma)
;   vse8.v v11,0(a1) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.sw s1, 0x18(s1)
;   .byte 0xd7, 0x45
;   c.li t3, -0x1f
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0xa7, 0x85
;   c.addi tp, 1
;   ret

function %splat_i32x4(i32) -> i32x4 {
block0(v0: i32):
    v1 = splat.i32x4 v0
    return v1
}

; VCode:
; block0:
;   vmv.v.x v11,a0 #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v11,0(a1) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.swsp zero, 0x98(sp)
;   .byte 0xd7, 0x45
;   c.li t3, -0x1f
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0xa7, 0x85
;   c.addi tp, 1
;   ret

function %splat_i64x2(i64) -> i64x2 {
block0(v0: i64):
    v1 = splat.i64x2 v0
    return v1
}

; VCode:
; block0:
;   vmv.v.x v11,a0 #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v11,0(a1) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.beqz a1, 0x18
;   .byte 0xd7, 0x45
;   c.li t3, -0x1f
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0xa7, 0x85
;   c.addi tp, 1
;   ret

function %splat_const_i8x16() -> i8x16 {
block0:
    v0 = iconst.i8 2
    v1 = splat.i8x16 v0
    return v1
}

; VCode:
; block0:
;   vmv.v.i v10,2 #avl=16, #vtype=(e8, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0x57, 0x35
;   c.li t3, -0x20
;   .byte 0x27, 0x05
;   c.addi tp, 1
;   ret

function %splat_const_i16x8() -> i16x8 {
block0:
    v0 = iconst.i16 2
    v1 = splat.i16x8 v0
    return v1
}

; VCode:
; block0:
;   vmv.v.i v10,2 #avl=8, #vtype=(e16, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.sw s1, 0x18(s1)
;   .byte 0x57, 0x35
;   c.li t3, -0x20
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0x27, 0x05
;   c.addi tp, 1
;   ret

function %splat_const_i32x4() -> i32x4 {
block0:
    v0 = iconst.i32 2
    v1 = splat.i32x4 v0
    return v1
}

; VCode:
; block0:
;   vmv.v.i v10,2 #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.swsp zero, 0x98(sp)
;   .byte 0x57, 0x35
;   c.li t3, -0x20
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0x27, 0x05
;   c.addi tp, 1
;   ret

function %splat_const_i64x2() -> i64x2 {
block0:
    v0 = iconst.i64 2
    v1 = splat.i64x2 v0
    return v1
}

; VCode:
; block0:
;   vmv.v.i v10,2 #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.beqz a1, 0x18
;   .byte 0x57, 0x35
;   c.li t3, -0x20
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0x27, 0x05
;   c.addi tp, 1
;   ret

function %splat_f32x4(f32) -> f32x4 {
block0(v0: f32):
    v1 = splat.f32x4 v0
    return v1
}

; VCode:
; block0:
;   vfmv.v.f v11,fa0 #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v11,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.swsp zero, 0x98(sp)
;   .byte 0xd7, 0x55
;   c.li t3, -0x1f
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0xa7, 0x05
;   c.addi tp, 1
;   ret

function %splat_f64x2(f64) -> f64x2 {
block0(v0: f64):
    v1 = splat.f64x2 v0
    return v1
}

; VCode:
; block0:
;   vfmv.v.f v11,fa0 #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v11,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.beqz a1, 0x18
;   .byte 0xd7, 0x55
;   c.li t3, -0x1f
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0xa7, 0x05
;   c.addi tp, 1
;   ret

