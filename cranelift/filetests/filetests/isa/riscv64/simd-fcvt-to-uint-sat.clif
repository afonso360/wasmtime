test compile precise-output
set unwind_info=false
target riscv64 has_v

function %fcvt_to_uint_sat(f32x4) -> i32x4 {
block0(v0:f32x4):
    v1 = fcvt_to_uint_sat.i32x4 v0
    return v1
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,16(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   vmfne.vv v0,v9,v9 #avl=4, #vtype=(e32, m1, ta, ma)
;   vfcvt.rtz.xu.f.v v14,v9 #avl=4, #vtype=(e32, m1, ta, ma)
;   vmerge.vim v8,v14,0,v0.t #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v8,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   c.addi sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   c.mv s0, sp
; block1: ; offset 0xc
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   addi t6, s0, 0x10
;   .byte 0x87, 0x84
;   .byte 0x0f, 0x02
;   .byte 0x57, 0x70
;   c.swsp zero, 0x98(sp)
;   .byte 0x57, 0x90
;   c.ld a3, 0x20(a3)
;   .byte 0x57, 0x17
;   xori s5, a4, 0x345
;   c.lw s0, 0x7c(s1)
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0x27, 0x04
;   c.addi tp, 1
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   c.addi sp, 0x10
;   ret

