test compile precise-output
set unwind_info=false
target riscv64 has_v

function %popcnt_i8x16(i8x16) -> i8x16 {
block0(v0: i8x16):
    v1 = popcnt v0
    return v1
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,16(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   li a4,85
;   vsrl.vi v14,v9,1 #avl=16, #vtype=(e8, m1, ta, ma)
;   vand.vx v8,v14,a4 #avl=16, #vtype=(e8, m1, ta, ma)
;   vsub.vv v10,v9,v8 #avl=16, #vtype=(e8, m1, ta, ma)
;   li a1,51
;   vsrl.vi v14,v10,2 #avl=16, #vtype=(e8, m1, ta, ma)
;   vand.vx v8,v14,a1 #avl=16, #vtype=(e8, m1, ta, ma)
;   vand.vx v10,v10,a1 #avl=16, #vtype=(e8, m1, ta, ma)
;   vadd.vv v12,v10,v8 #avl=16, #vtype=(e8, m1, ta, ma)
;   li a4,15
;   vsrl.vi v8,v12,4 #avl=16, #vtype=(e8, m1, ta, ma)
;   vadd.vv v10,v12,v8 #avl=16, #vtype=(e8, m1, ta, ma)
;   vand.vx v12,v10,a4 #avl=16, #vtype=(e8, m1, ta, ma)
;   li a1,1
;   vmul.vx v8,v12,a1 #avl=16, #vtype=(e8, m1, ta, ma)
;   li a4,0
;   vsrl.vx v12,v8,a4 #avl=16, #vtype=(e8, m1, ta, ma)
;   vse8.v v12,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   ori s0, sp, 0
; block1: ; offset 0x10
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   addi t6, s0, 0x10
;   .byte 0x87, 0x84
;   .byte 0x0f, 0x02
;   addi a4, zero, 0x55
;   .byte 0x57, 0xb7
;   c.fsd fa2, 0(a3)
;   .byte 0x57, 0x44
;   .byte 0xe7, 0x26
;   .byte 0x57, 0x05
;   c.addi4spn a3, sp, 0x150
;   addi a1, zero, 0x33
;   .byte 0x57, 0x37
;   c.j 0x148
;   .byte 0x57, 0xc4
;   c.addiw a3, 0x19
;   .byte 0x57, 0xc5
;   c.addiw a3, 9
;   .byte 0x57, 0x06
;   c.addi4spn s1, sp, 0x148
;   addi a4, zero, 0xf
;   .byte 0x57, 0x34
;   c.fsdsp fa6, 0x140(sp)
;   .byte 0x57, 0x05
;   c.addi4spn s1, sp, 0x144
;   .byte 0x57, 0x46
;   fsw fs9, 0x4d(t1)
;   .byte 0x10, 0x00
;   .byte 0x57, 0xe4
;   c.srai a3, 0x31
;   mv a4, zero
;   .byte 0x57, 0x46
;   flw ft5, 0x62(a5)
;   c.addi tp, 1
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %popcnt_i16x8(i16x8) -> i16x8 {
block0(v0: i16x8):
    v1 = popcnt v0
    return v1
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,16(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   lui a4,5
;   addi a1,a4,1365
;   vsrl.vi v8,v9,1 #avl=8, #vtype=(e16, m1, ta, ma)
;   vand.vx v10,v8,a1 #avl=8, #vtype=(e16, m1, ta, ma)
;   vsub.vv v12,v9,v10 #avl=8, #vtype=(e16, m1, ta, ma)
;   lui a2,3
;   addi a4,a2,819
;   vsrl.vi v10,v12,2 #avl=8, #vtype=(e16, m1, ta, ma)
;   vand.vx v13,v10,a4 #avl=8, #vtype=(e16, m1, ta, ma)
;   vand.vx v14,v12,a4 #avl=8, #vtype=(e16, m1, ta, ma)
;   vadd.vv v8,v14,v13 #avl=8, #vtype=(e16, m1, ta, ma)
;   lui a2,1
;   addi a4,a2,3855
;   vsrl.vi v14,v8,4 #avl=8, #vtype=(e16, m1, ta, ma)
;   vadd.vv v8,v8,v14 #avl=8, #vtype=(e16, m1, ta, ma)
;   vand.vx v10,v8,a4 #avl=8, #vtype=(e16, m1, ta, ma)
;   li a1,257
;   vmul.vx v14,v10,a1 #avl=8, #vtype=(e16, m1, ta, ma)
;   li a4,8
;   vsrl.vx v10,v14,a4 #avl=8, #vtype=(e16, m1, ta, ma)
;   vse8.v v10,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   ori s0, sp, 0
; block1: ; offset 0x10
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   addi t6, s0, 0x10
;   .byte 0x87, 0x84
;   .byte 0x0f, 0x02
;   lui a4, 5
;   addi a1, a4, 0x555
;   .byte 0x57, 0x70
;   c.sw s1, 0x18(s1)
;   .byte 0x57, 0xb4
;   c.fsd fa2, 0(a3)
;   .byte 0x57, 0xc5
;   c.addiw a3, 1
;   .byte 0x57, 0x06
;   c.addi s5, 5
;   lui a2, 3
;   addi a4, a2, 0x333
;   .byte 0x57, 0x35
;   c.j 0x1c0
;   .byte 0xd7, 0x46
;   fsw fs5, 0x46d(a4)
;   .byte 0xc7, 0x26
;   .byte 0x57, 0x84
;   c.slli t0, 0x19
;   lui a2, 1
;   addi a4, a2, -0xf1
;   .byte 0x57, 0x37
;   c.fsdsp ft0, 0x140(sp)
;   .byte 0x57, 0x04
;   .byte 0x87, 0x02
;   .byte 0x57, 0x45
;   flw fa3, 0x59(t1)
;   c.addi4spn a2, sp, 0x20
;   .byte 0x57, 0xe7
;   c.srai a3, 0x29
;   addi a4, zero, 8
;   .byte 0x57, 0x45
;   .byte 0xe7, 0xa2
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0x27, 0x05
;   c.addi tp, 1
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %popcnt_i32x4(i32x4) -> i32x4 {
block0(v0: i32x4):
    v1 = popcnt v0
    return v1
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,16(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   lui a4,349525
;   addi a1,a4,1365
;   vsrl.vi v8,v9,1 #avl=4, #vtype=(e32, m1, ta, ma)
;   vand.vx v10,v8,a1 #avl=4, #vtype=(e32, m1, ta, ma)
;   vsub.vv v12,v9,v10 #avl=4, #vtype=(e32, m1, ta, ma)
;   lui a2,209715
;   addi a4,a2,819
;   vsrl.vi v10,v12,2 #avl=4, #vtype=(e32, m1, ta, ma)
;   vand.vx v13,v10,a4 #avl=4, #vtype=(e32, m1, ta, ma)
;   vand.vx v14,v12,a4 #avl=4, #vtype=(e32, m1, ta, ma)
;   vadd.vv v8,v14,v13 #avl=4, #vtype=(e32, m1, ta, ma)
;   lui a2,61681
;   addi a4,a2,3855
;   vsrl.vi v14,v8,4 #avl=4, #vtype=(e32, m1, ta, ma)
;   vadd.vv v8,v8,v14 #avl=4, #vtype=(e32, m1, ta, ma)
;   vand.vx v10,v8,a4 #avl=4, #vtype=(e32, m1, ta, ma)
;   lui a1,4112
;   addi a2,a1,257
;   vmul.vx v8,v10,a2 #avl=4, #vtype=(e32, m1, ta, ma)
;   li a1,24
;   vsrl.vx v12,v8,a1 #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v12,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   ori s0, sp, 0
; block1: ; offset 0x10
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   addi t6, s0, 0x10
;   .byte 0x87, 0x84
;   .byte 0x0f, 0x02
;   lui a4, 0x55555
;   addi a1, a4, 0x555
;   .byte 0x57, 0x70
;   c.swsp zero, 0x98(sp)
;   .byte 0x57, 0xb4
;   c.fsd fa2, 0(a3)
;   .byte 0x57, 0xc5
;   c.addiw a3, 1
;   .byte 0x57, 0x06
;   c.addi s5, 5
;   lui a2, 0x33333
;   addi a4, a2, 0x333
;   .byte 0x57, 0x35
;   c.j 0x1c0
;   .byte 0xd7, 0x46
;   fsw fs5, 0x46d(a4)
;   .byte 0xc7, 0x26
;   .byte 0x57, 0x84
;   c.slli t0, 0x19
;   lui a2, 0xf0f1
;   addi a4, a2, -0xf1
;   .byte 0x57, 0x37
;   c.fsdsp ft0, 0x140(sp)
;   .byte 0x57, 0x04
;   .byte 0x87, 0x02
;   .byte 0x57, 0x45
;   flw fa3, 0x5b(a4)
;   c.addi sp, 0
;   addi a2, a1, 0x101
;   .byte 0x57, 0x64
;   c.add a3, s1
;   addi a1, zero, 0x18
;   .byte 0x57, 0xc6
;   c.j 0x160
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0x27, 0x06
;   c.addi tp, 1
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %popcnt_i64x2(i64x2) -> i64x2 {
block0(v0: i64x2):
    v1 = popcnt v0
    return v1
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,16(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld a4,[const(0)]
;   vsrl.vi v14,v9,1 #avl=2, #vtype=(e64, m1, ta, ma)
;   vand.vx v8,v14,a4 #avl=2, #vtype=(e64, m1, ta, ma)
;   vsub.vv v10,v9,v8 #avl=2, #vtype=(e64, m1, ta, ma)
;   ld a1,[const(1)]
;   vsrl.vi v14,v10,2 #avl=2, #vtype=(e64, m1, ta, ma)
;   vand.vx v8,v14,a1 #avl=2, #vtype=(e64, m1, ta, ma)
;   vand.vx v10,v10,a1 #avl=2, #vtype=(e64, m1, ta, ma)
;   vadd.vv v12,v10,v8 #avl=2, #vtype=(e64, m1, ta, ma)
;   ld a4,[const(2)]
;   vsrl.vi v8,v12,4 #avl=2, #vtype=(e64, m1, ta, ma)
;   vadd.vv v10,v12,v8 #avl=2, #vtype=(e64, m1, ta, ma)
;   vand.vx v12,v10,a4 #avl=2, #vtype=(e64, m1, ta, ma)
;   ld a1,[const(3)]
;   vmul.vx v8,v12,a1 #avl=2, #vtype=(e64, m1, ta, ma)
;   li a4,56
;   vsrl.vx v12,v8,a4 #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v12,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   ori s0, sp, 0
; block1: ; offset 0x10
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   addi t6, s0, 0x10
;   .byte 0x87, 0x84
;   .byte 0x0f, 0x02
;   auipc a4, 0
;   ld a4, 0x74(a4)
;   .byte 0x57, 0x70
;   c.beqz a1, 0x18
;   .byte 0x57, 0xb7
;   c.fsd fa2, 0(a3)
;   .byte 0x57, 0x44
;   .byte 0xe7, 0x26
;   .byte 0x57, 0x05
;   c.addi4spn a3, sp, 0x150
;   auipc a1, 0
;   ld a1, 0x64(a1)
;   .byte 0x57, 0x37
;   c.j 0x148
;   .byte 0x57, 0xc4
;   c.addiw a3, 0x19
;   .byte 0x57, 0xc5
;   c.addiw a3, 9
;   .byte 0x57, 0x06
;   c.addi4spn s1, sp, 0x148
;   auipc a4, 0
;   ld a4, 0x54(a4)
;   .byte 0x57, 0x34
;   c.fsdsp fa6, 0x140(sp)
;   .byte 0x57, 0x05
;   c.addi4spn s1, sp, 0x144
;   .byte 0x57, 0x46
;   fsw fs9, 0x4d(a4)
;   c.unimp
;   ld a1, 0x48(a1)
;   .byte 0x57, 0xe4
;   c.srai a3, 0x31
;   addi a4, zero, 0x38
;   .byte 0x57, 0x46
;   flw ft5, 0x705(a5)
;   c.sw a0, 0x18(s0)
;   .byte 0x27, 0x06
;   c.addi tp, 1
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret
;   c.unimp
;   c.unimp
;   c.li a0, -0xb
;   c.li a0, -0xb
;   c.li a0, -0xb
;   c.li a0, -0xb
;   .byte 0x33, 0x33
;   .byte 0x33, 0x33
;   .byte 0x33, 0x33
;   .byte 0x33, 0x33
;   .byte 0x0f, 0x0f
;   .byte 0x0f, 0x0f
;   .byte 0x0f, 0x0f
;   .byte 0x0f, 0x0f
;   c.addi sp, 0
;   c.addi sp, 0
;   c.addi sp, 0
;   c.addi sp, 0

