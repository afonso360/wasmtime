test compile precise-output
set unwind_info=false
target riscv64 has_v


function %floor_f32x4(f32x4) -> f32x4 {
block0(v0: f32x4):
    v1 = floor v0
    return v1
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,16(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   vfabs.v v12,v9 #avl=4, #vtype=(e32, m1, ta, ma)
;   lui a1,307200
;   fmv.w.x fa2,a1
;   vmflt.vf v0,v12,fa2 #avl=4, #vtype=(e32, m1, ta, ma)
;   fsrmi a1,2
;   vfcvt.x.f.v v14,v9 #avl=4, #vtype=(e32, m1, ta, ma)
;   fsrm a1
;   vfcvt.f.x.v v10,v14 #avl=4, #vtype=(e32, m1, ta, ma)
;   vfsgnj.vv v11,v10,v9 #avl=4, #vtype=(e32, m1, ta, ma)
;   fmv.w.x fa3,zero
;   vfadd.vf v15,v9,fa3 #avl=4, #vtype=(e32, m1, ta, ma)
;   vmerge.vvm v9,v15,v11,v0.t #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v9,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   c.mv s0, sp
; block1: ; offset 0xe
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   addi t6, s0, 0x10
;   .byte 0x87, 0x84
;   .byte 0x0f, 0x02
;   .byte 0x57, 0x70
;   c.swsp zero, 0x98(sp)
;   .byte 0x57, 0x96
;   c.fld fa3, 0x10(a3)
;   lui a1, 0x4b000
;   fmv.w.x fa2, a1
;   .byte 0x57, 0x50
;   c.ldsp t4, 0x50(sp)
;   fsrmi a1, 2
;   .byte 0x57, 0x97
;   c.lw a2, 0x10(a3)
;   fsrm a1
;   .byte 0x57, 0x95
;   c.li s5, 0x18
;   .byte 0xd7, 0x95
;   c.fld fs1, 0x40(a3)
;   fmv.w.x fa3, zero
;   .byte 0xd7, 0xd7
;   c.slli t0, 5
;   .byte 0xd7, 0x84
;   c.li s9, -3
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0xa7, 0x04
;   c.addi tp, 1
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %floor_f64x2(f64x2) -> f64x2 {
block0(v0: f64x2):
    v1 = floor v0
    return v1
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v9,16(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   vfabs.v v12,v9 #avl=2, #vtype=(e64, m1, ta, ma)
;   ld a1,[const(0)]
;   fmv.d.x fa2,a1
;   vmflt.vf v0,v12,fa2 #avl=2, #vtype=(e64, m1, ta, ma)
;   fsrmi a1,2
;   vfcvt.x.f.v v14,v9 #avl=2, #vtype=(e64, m1, ta, ma)
;   fsrm a1
;   vfcvt.f.x.v v10,v14 #avl=2, #vtype=(e64, m1, ta, ma)
;   vfsgnj.vv v11,v10,v9 #avl=2, #vtype=(e64, m1, ta, ma)
;   fmv.d.x fa3,zero
;   vfadd.vf v15,v9,fa3 #avl=2, #vtype=(e64, m1, ta, ma)
;   vmerge.vvm v9,v15,v11,v0.t #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v9,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   c.mv s0, sp
; block1: ; offset 0xe
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   addi t6, s0, 0x10
;   .byte 0x87, 0x84
;   .byte 0x0f, 0x02
;   .byte 0x57, 0x70
;   c.beqz a1, 0x18
;   .byte 0x57, 0x96
;   c.fld fa3, 0x10(a3)
;   auipc a1, 0
;   ld a1, 0x4e(a1)
;   fmv.d.x fa2, a1
;   .byte 0x57, 0x50
;   c.ldsp t4, 0x50(sp)
;   fsrmi a1, 2
;   .byte 0x57, 0x97
;   c.lw a2, 0x10(a3)
;   fsrm a1
;   .byte 0x57, 0x95
;   c.li s5, 0x18
;   .byte 0xd7, 0x95
;   c.fld fs1, 0x40(a3)
;   fmv.d.x fa3, zero
;   .byte 0xd7, 0xd7
;   c.slli t0, 5
;   .byte 0xd7, 0x84
;   c.li s9, -3
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0xa7, 0x04
;   c.addi tp, 1
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret
;   c.unimp
;   c.unimp
;   c.unimp
;   c.unimp
;   c.unimp
;   c.unimp
;   c.lw a2, 0x40(a4)

