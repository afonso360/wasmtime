test compile precise-output
set unwind_info=false
target riscv64 has_v


function %load_i8x16(i64) -> i8x16 {
block0(v0: i64):
    v1 = load.i8x16 v0
    return v1
}

; VCode:
; block0:
;   vle8.v v11,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   vse8.v v11,0(a1) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0x87, 0x05
;   c.addi tp, 1
;   .byte 0xa7, 0x85
;   c.addi tp, 1
;   ret

function %load_i16x8(i64) -> i16x8 {
block0(v0: i64):
    v1 = load.i16x8 v0
    return v1
}

; VCode:
; block0:
;   vle16.v v11,0(a0) #avl=8, #vtype=(e16, m1, ta, ma)
;   vse8.v v11,0(a1) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.sw s1, 0x18(s1)
;   .byte 0x87, 0x55
;   c.addi tp, 1
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0xa7, 0x85
;   c.addi tp, 1
;   ret

function %load_i32x4(i64) -> i32x4 {
block0(v0: i64):
    v1 = load.i32x4 v0
    return v1
}

; VCode:
; block0:
;   vle32.v v11,0(a0) #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v11,0(a1) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.swsp zero, 0x98(sp)
;   .byte 0x87, 0x65
;   c.addi tp, 1
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0xa7, 0x85
;   c.addi tp, 1
;   ret

function %load_i64x2(i64) -> i64x2 {
block0(v0: i64):
    v1 = load.i64x2 v0
    return v1
}

; VCode:
; block0:
;   vle64.v v11,0(a0) #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v11,0(a1) #avl=16, #vtype=(e8, m1, ta, ma)
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   .byte 0x57, 0x70
;   c.beqz a1, 0x18
;   .byte 0x87, 0x75
;   c.addi tp, 1
;   .byte 0x57, 0x70
;   c.sw a0, 0x18(s0)
;   .byte 0xa7, 0x85
;   c.addi tp, 1
;   ret

