test compile precise-output
target riscv64

function %icmp_eq_i128_imm(i128) -> i8 {
block0(v0: i128):
  v1 = iconst.i64 42
  v2 = uextend.i128 v1
  v3 = icmp.i128 eq v0, v2
  return v3
}

; VCode:
; block0:
;   li a2,42
;   li a3,0
;   eq a0,[a0,a1],[a2,a3]##ty=i128
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   addi a2, zero, 0x2a
;   mv a3, zero
;   bne a1, a3, 0x10
;   bne a0, a2, 0xc
;   addi a0, zero, 1
;   j 8
;   mv a0, zero
;   ret

function %icmp_ne_i128_imm(i128) -> i8 {
block0(v0: i128):
  v1 = iconst.i64 42
  v2 = uextend.i128 v1
  v3 = icmp.i128 ne v0, v2
  return v3
}

; VCode:
; block0:
;   li a2,42
;   li a3,0
;   ne a0,[a0,a1],[a2,a3]##ty=i128
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   addi a2, zero, 0x2a
;   mv a3, zero
;   bne a1, a3, 8
;   beq a0, a2, 0xc
;   addi a0, zero, 1
;   j 8
;   mv a0, zero
;   ret

function %icmp_slt_i128_imm(i128) -> i8 {
block0(v0: i128):
  v1 = iconst.i64 42
  v2 = uextend.i128 v1
  v3 = icmp.i128 slt v0, v2
  return v3
}

; VCode:
; block0:
;   li a2,42
;   li a3,0
;   slt a0,[a0,a1],[a2,a3]##ty=i128
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   addi a2, zero, 0x2a
;   mv a3, zero
;   blt a1, a3, 0xc
;   bne a1, a3, 0x10
;   bgeu a0, a2, 0xc
;   addi a0, zero, 1
;   j 8
;   mv a0, zero
;   ret

function %icmp_sgt_i128_imm(i128) -> i8 {
block0(v0: i128):
  v1 = iconst.i64 42
  v2 = uextend.i128 v1
  v3 = icmp.i128 sgt v0, v2
  return v3
}

; VCode:
; block0:
;   li a2,42
;   li a3,0
;   sgt a0,[a0,a1],[a2,a3]##ty=i128
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   addi a2, zero, 0x2a
;   mv a3, zero
;   blt a3, a1, 0xc
;   bne a1, a3, 0x10
;   bgeu a2, a0, 0xc
;   addi a0, zero, 1
;   j 8
;   mv a0, zero
;   ret

function %icmp_sle_i128_imm(i128) -> i8 {
block0(v0: i128):
  v1 = iconst.i64 42
  v2 = uextend.i128 v1
  v3 = icmp.i128 sle v0, v2
  return v3
}

; VCode:
; block0:
;   li a2,42
;   li a3,0
;   sle a0,[a0,a1],[a2,a3]##ty=i128
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   addi a2, zero, 0x2a
;   mv a3, zero
;   blt a1, a3, 0xc
;   bne a1, a3, 0x10
;   bltu a2, a0, 0xc
;   addi a0, zero, 1
;   j 8
;   mv a0, zero
;   ret

function %icmp_sge_i128_imm(i128) -> i8 {
block0(v0: i128):
  v1 = iconst.i64 42
  v2 = uextend.i128 v1
  v3 = icmp.i128 sge v0, v2
  return v3
}

; VCode:
; block0:
;   li a2,42
;   li a3,0
;   sge a0,[a0,a1],[a2,a3]##ty=i128
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   addi a2, zero, 0x2a
;   mv a3, zero
;   blt a3, a1, 0xc
;   bne a1, a3, 0x10
;   bltu a0, a2, 0xc
;   addi a0, zero, 1
;   j 8
;   mv a0, zero
;   ret

function %icmp_ult_i128_imm(i128) -> i8 {
block0(v0: i128):
  v1 = iconst.i64 42
  v2 = uextend.i128 v1
  v3 = icmp.i128 ult v0, v2
  return v3
}

; VCode:
; block0:
;   li a2,42
;   li a3,0
;   ult a0,[a0,a1],[a2,a3]##ty=i128
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   addi a2, zero, 0x2a
;   mv a3, zero
;   bltu a1, a3, 0xc
;   bne a1, a3, 0x10
;   bgeu a0, a2, 0xc
;   addi a0, zero, 1
;   j 8
;   mv a0, zero
;   ret

function %icmp_ugt_i128_imm(i128) -> i8 {
block0(v0: i128):
  v1 = iconst.i64 42
  v2 = uextend.i128 v1
  v3 = icmp.i128 ugt v0, v2
  return v3
}

; VCode:
; block0:
;   li a2,42
;   li a3,0
;   ugt a0,[a0,a1],[a2,a3]##ty=i128
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   addi a2, zero, 0x2a
;   mv a3, zero
;   bltu a3, a1, 0xc
;   bne a1, a3, 0x10
;   bgeu a2, a0, 0xc
;   addi a0, zero, 1
;   j 8
;   mv a0, zero
;   ret

function %icmp_ule_i128_imm(i128) -> i8 {
block0(v0: i128):
  v1 = iconst.i64 42
  v2 = uextend.i128 v1
  v3 = icmp.i128 ule v0, v2
  return v3
}

; VCode:
; block0:
;   li a2,42
;   li a3,0
;   ule a0,[a0,a1],[a2,a3]##ty=i128
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   addi a2, zero, 0x2a
;   mv a3, zero
;   bltu a1, a3, 0xc
;   bne a1, a3, 0x10
;   bltu a2, a0, 0xc
;   addi a0, zero, 1
;   j 8
;   mv a0, zero
;   ret

function %icmp_uge_i128_imm(i128) -> i8 {
block0(v0: i128):
  v1 = iconst.i64 42
  v2 = uextend.i128 v1
  v3 = icmp.i128 uge v0, v2
  return v3
}

; VCode:
; block0:
;   li a2,42
;   li a3,0
;   uge a0,[a0,a1],[a2,a3]##ty=i128
;   ret
; 
; Disassembled:
; block0: ; offset 0x0
;   addi a2, zero, 0x2a
;   mv a3, zero
;   bltu a3, a1, 0xc
;   bne a1, a3, 0x10
;   bltu a0, a2, 0xc
;   addi a0, zero, 1
;   j 8
;   mv a0, zero
;   ret

